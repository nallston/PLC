ParserTests [After Types] (8/16):
Source (2/5):
    List - Singular: Unexpected java.lang.RuntimeException: Unknown type Type.
    Function: Incorrect result, received Ast.Source{globals=[], functions=[Ast.Function{name='name', parameters=[], parameterTypeNames=[], returnTypeName='Optional[]', statements=[Ast.Statement.Expression{expression=Ast.Expression.Access{offset=Optional.empty, name='stmt', variable=null}}], function=null}]}
    Global Function: Incorrect result, received Ast.Source{globals=[Ast.Global{name='name', typeName=Type, mutable=false, value=Optional[Ast.Expression.Access{offset=Optional.empty, name='expr', variable=null}], variable=null}], functions=[Ast.Function{name='name', parameters=[], parameterTypeNames=[], returnTypeName='Optional[]', statements=[Ast.Statement.Expression{expression=Ast.Expression.Access{offset=Optional.empty, name='stmt', variable=null}}], function=null}]}
Global (2/4):
    Definition: Incorrect result, received Ast.Global{name='name', typeName=Any, mutable=true, value=Optional.empty, variable=null}
    List - Multiples: Unexpected java.lang.RuntimeException: Unknown type Type.
Function Definition (2/4):
    Baseline Function: Incorrect result, received Ast.Function{name='name', parameters=[], parameterTypeNames=[], returnTypeName='Optional[]', statements=[Ast.Statement.Expression{expression=Ast.Expression.Access{offset=Optional.empty, name='stmt', variable=null}}], function=null}
    Argument Type: Incorrect result, received Ast.Function{name='name', parameters=[arg], parameterTypeNames=[Type], returnTypeName='Optional[]', statements=[Ast.Statement.Expression{expression=Ast.Expression.Access{offset=Optional.empty, name='stmt', variable=null}}], function=null}
Statement (2/3):
    Declaration (2/3): Type Annotation: Unexpected ParseException (Exception missing ';')
